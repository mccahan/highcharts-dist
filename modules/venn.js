/*
 Highcharts JS v11.1.0 (2023-08-20)

 (c) 2017-2021 Highsoft AS
 Authors: Jon Arild Nygard

 License: www.highcharts.com/license
*/
'use strict';(function(a){"object"===typeof module&&module.exports?(a["default"]=a,module.exports=a):"function"===typeof define&&define.amd?define("highcharts/modules/venn",["highcharts"],function(l){a(l);a.Highcharts=l;return a}):a("undefined"!==typeof Highcharts?Highcharts:void 0)})(function(a){function l(a,c,z,q){a.hasOwnProperty(c)||(a[c]=q.apply(null,z),"function"===typeof CustomEvent&&window.dispatchEvent(new CustomEvent("HighchartsModuleLoaded",{detail:{path:c,module:a[c]}})))}a=a?a._modules:
{};l(a,"Core/Geometry/GeometryUtilities.js",[],function(){var a;(function(a){a.getCenterOfPoints=function(a){const c=a.reduce((a,c)=>{a.x+=c.x;a.y+=c.y;return a},{x:0,y:0});return{x:c.x/a.length,y:c.y/a.length}};a.getDistanceBetweenPoints=function(a,c){return Math.sqrt(Math.pow(c.x-a.x,2)+Math.pow(c.y-a.y,2))};a.getAngleBetweenPoints=function(a,c){return Math.atan2(c.x-a.x,c.y-a.y)}})(a||(a={}));return a});l(a,"Core/Geometry/CircleUtilities.js",[a["Core/Geometry/GeometryUtilities.js"]],function(a){const {getAngleBetweenPoints:c,
getCenterOfPoints:r,getDistanceBetweenPoints:q}=a;var x;(function(a){function t(a,f){f=Math.pow(10,f);return Math.round(a*f)/f}function g(a){if(0>=a)throw Error("radius of circle must be a positive number.");return Math.PI*a*a}function C(a,f){return a*a*Math.acos(1-f/a)-(a-f)*Math.sqrt(f*(2*a-f))}function z(a,f){var c=q(a,f),k=a.r,m=f.r,g=[];if(c<k+m&&c>Math.abs(k-m)){k*=k;var u=(k-m*m+c*c)/(2*c);m=Math.sqrt(k-u*u);k=a.x;g=f.x;a=a.y;const r=f.y;f=k+u*(g-k)/c;u=a+u*(r-a)/c;a=m/c*-(r-a);c=m/c*-(g-k);
g=[{x:t(f+a,14),y:t(u-c,14)},{x:t(f-a,14),y:t(u+c,14)}]}return g}function x(a){return a.reduce((a,c,m,g)=>{g=g.slice(m+1).reduce((a,f,g)=>{const k=[m,g+m+1];return a.concat(z(c,f).map(a=>{a.indexes=k;return a}))},[]);return a.concat(g)},[])}function l(a,f){return q(a,f)<=f.r+1e-10}function w(a,f){return!f.some(function(f){return!l(a,f)})}function B(a){return x(a).filter(function(f){return w(f,a)})}a.round=t;a.getAreaOfCircle=g;a.getCircularSegmentArea=C;a.getOverlapBetweenCircles=function(a,f,c){var k=
0;c<a+f&&(c<=Math.abs(f-a)?k=g(a<f?a:f):(k=(a*a-f*f+c*c)/(2*c),c-=k,k=C(a,a-k)+C(f,f-c)),k=t(k,14));return k};a.getCircleCircleIntersection=z;a.getCirclesIntersectionPoints=x;a.isCircle1CompletelyOverlappingCircle2=function(a,c){return q(a,c)+c.r<a.r+1e-10};a.isPointInsideCircle=l;a.isPointInsideAllCircles=w;a.isPointOutsideAllCircles=function(a,c){return!c.some(function(c){return l(a,c)})};a.getCirclesIntersectionPolygon=B;a.getAreaOfIntersectionBetweenCircles=function(a){var f=B(a);let g;if(1<f.length){const k=
r(f);f=f.map(function(a){a.angle=c(k,a);return a}).sort(function(a,c){return c.angle-a.angle});const m=f[f.length-1];f=f.reduce(function(f,g){const {startPoint:k}=f,m=r([k,g]),l=g.indexes.filter(function(a){return-1<k.indexes.indexOf(a)}).reduce(function(n,b){b=a[b];var e=c(b,g);const d=c(b,k);e=d-(d-e+(d<e?2*Math.PI:0))/2;e=q(m,{x:b.x+b.r*Math.sin(e),y:b.y+b.r*Math.cos(e)});({r:b}=b);e>2*b&&(e=2*b);if(!n||n.width>e)n={r:b,largeArc:e>b?1:0,width:e,x:g.x,y:g.y};return n},null);if(l){const {r:a}=l;
f.arcs.push(["A",a,a,0,l.largeArc,1,l.x,l.y]);f.startPoint=g}return f},{startPoint:m,arcs:[]}).arcs;0!==f.length&&1!==f.length&&(f.unshift(["M",m.x,m.y]),g={center:k,d:f})}return g}})(x||(x={}));return x});l(a,"Series/DrawPointUtilities.js",[a["Core/Utilities.js"]],function(){return{draw:function(a,c){const {animatableAttribs:l,onComplete:q,css:r,renderer:w}=c,t=a.series&&a.series.chart.hasRendered?void 0:a.series&&a.series.options.animation;let g=a.graphic;c.attribs=Object.assign(Object.assign({},
c.attribs),{"class":a.getClassName()})||{};if(a.shouldDraw())g||(g="text"===c.shapeType?w.text():"image"===c.shapeType?w.image(c.imageUrl||"").attr(c.shapeArgs||{}):w[c.shapeType](c.shapeArgs||{}),a.graphic=g,g.add(c.group)),r&&g.css(r),g.attr(c.attribs).animate(l,c.isNew?!1:t,q);else if(g){const c=()=>{a.graphic=g=g&&g.destroy();"function"===typeof q&&q()};Object.keys(l).length?g.animate(l,void 0,()=>c()):c()}}}});l(a,"Series/Venn/VennPoint.js",[a["Core/Series/SeriesRegistry.js"],a["Core/Utilities.js"]],
function(a,c){({seriesTypes:{scatter:{prototype:{pointClass:a}}}}=a);const {isNumber:l}=c;class q extends a{constructor(){super(...arguments);this.series=this.options=void 0}isValid(){return l(this.value)}shouldDraw(){return!!this.shapeArgs}}return q});l(a,"Series/Venn/VennUtils.js",[a["Core/Geometry/CircleUtilities.js"],a["Core/Geometry/GeometryUtilities.js"],a["Core/Utilities.js"]],function(a,c,l){function q(a){const b={};a.filter(a=>2===a.sets.length).forEach(a=>{a.sets.forEach((d,h,e)=>{H(b[d])||
(b[d]={totalOverlap:0,overlapping:{}});b[d]={totalOverlap:(b[d].totalOverlap||0)+a.value,overlapping:Object.assign(Object.assign({},b[d].overlapping||{}),{[e[1-h]]:a.value})}})});a.filter(r).forEach(a=>{G(a,b[a.sets[0]])});return a}function x(a,b,e,d,h){let y=a(b),c=a(e);h=h||100;d=d||1e-10;let n=e-b,f=1,p,g;if(b>=e)throw Error("a must be smaller than b.");if(0<y*c)throw Error("f(a) and f(b) must have opposite signs.");if(0===y)p=b;else if(0===c)p=e;else for(;f++<=h&&0!==g&&n>d;)n=(e-b)/2,p=b+n,g=
a(p),0<y*g?b=p:e=p;return p}function w(a){function b(a,b){a.sum+=b[a.i];return a}a=a.slice(0,-1);const e=a.length,d=[];for(let h=0;h<e;h++)d[h]=a.reduce(b,{sum:0,i:h}).sum/e;return d}function t(a,b,e){let d=a+b;return 0>=e?d:K(a<b?a:b)<=e?0:x(d=>{d=m(a,b,d);return e-d},0,d)}function g(a){var b=0;2===a.length&&(b=a[0],a=a[1],b=m(b.r,a.r,D(b,a)));return b}function r(a){return u(a.sets)&&1===a.sets.length}function z(a){const b={};return H(a)&&A(a.value)&&-1<a.value&&u(a.sets)&&0<a.sets.length&&!a.sets.some(function(a){let d=
!1;!b[a]&&E(a)?b[a]=!0:d=!0;return d})}function L(a,b){return b.reduce(function(b,d){var h=0;1<d.sets.length&&(h=d.value,d=g(d.sets.map(function(b){return a[b]})),d=h-d,h=Math.round(d*d*1E11)/1E11);return b+h},0)}function I(a,b){return"undefined"!==typeof b.totalOverlap&&"undefined"!==typeof a.totalOverlap?b.totalOverlap-a.totalOverlap:NaN}const {getAreaOfCircle:K,getCircleCircleIntersection:B,getOverlapBetweenCircles:m,isPointInsideAllCircles:f,isPointInsideCircle:J,isPointOutsideAllCircles:k}=a,
{getDistanceBetweenPoints:D}=c,{extend:G,isArray:u,isNumber:A,isObject:H,isString:E}=l;return{geometry:c,geometryCircles:a,addOverlapToSets:q,getCentroid:w,getDistanceBetweenCirclesByOverlap:t,getLabelWidth:function(a,b,e){function d(d,h){return x(function(e){var y={x:a.x+h*e,y:a.y};y=f(y,b)&&k(y,c);return-(d-e)+(y?0:Number.MAX_VALUE)},0,d)}const h=b.reduce((a,b)=>Math.min(b.r,a),Infinity),c=e.filter(function(b){return!J(a,b)});return 2*Math.min(d(h,-1),d(h,1))},getMarginFromCircles:function(a,b,
e){b=b.reduce(function(b,h){h=h.r-D(a,h);return h<=b?h:b},Number.MAX_VALUE);return b=e.reduce(function(b,h){h=D(a,h)-h.r;return h<=b?h:b},b)},isSet:r,layoutGreedyVenn:function(a){function b(a,b){const d=a.circle;d&&(d.x=b.x,d.y=b.y);e.push(a)}const e=[],d={};a.filter(function(a){return 1===a.sets.length}).forEach(function(a){d[a.sets[0]]=a.circle={x:Number.MAX_VALUE,y:Number.MAX_VALUE,r:Math.sqrt(a.value/Math.PI)}});q(a);const h=a.filter(r).sort(I);b(h.shift(),{x:0,y:0});const y=a.filter(function(a){return 2===
a.sets.length});h.forEach(function(a){const h=a.circle;if(h){var c=h.r,f=a.overlapping,g=e.reduce((a,b,g)=>{const p=b.circle;if(!p||!f)return a;const F=t(c,p.r,f[b.sets[0]]);let v=[{x:p.x+F,y:p.y},{x:p.x-F,y:p.y},{x:p.x,y:p.y+F},{x:p.x,y:p.y-F}];e.slice(g+1).forEach(function(a){const b=a.circle;b&&(a=t(c,b.r,f[a.sets[0]]),v=v.concat(B({x:p.x,y:p.y,r:F},{x:b.x,y:b.y,r:a})))});v.forEach(function(b){h.x=b.x;h.y=b.y;const e=L(d,y);e<a.loss&&(a.loss=e,a.coordinates=b)});return a},{loss:Number.MAX_VALUE,
coordinates:void 0});b(a,g.coordinates)}});return d},loss:L,nelderMead:function(a,b){function e(a,b){return a.fx-b.fx}const d=(a,b,d,h)=>b.map((b,e)=>a*b+d*h[e]),h=(b,d)=>{d.fx=a(d);b[b.length-1]=d;return b},c=b=>{const h=b[0];return b.map(b=>{b=d(.5,h,.5,b);b.fx=a(b);return b})},f=(b,h,e,c)=>{b=d(e,b,c,h);b.fx=a(b);return b};b=(b=>{const d=b.length,h=Array(d+1);h[0]=b;h[0].fx=a(b);for(let e=0;e<d;++e){const d=b.slice();d[e]=d[e]?1.05*d[e]:.001;d.fx=a(d);h[e+1]=d}return h})(b);for(let a=0;100>a;a++){b.sort(e);
var g=b[b.length-1],v=w(b);const a=f(v,g,2,-1);a.fx<b[0].fx?(g=f(v,g,3,-2),b=h(b,g.fx<a.fx?g:a)):a.fx>=b[b.length-2].fx?a.fx>g.fx?(v=f(v,g,.5,.5),b=v.fx<g.fx?h(b,v):c(b)):(v=f(v,g,1.5,-.5),b=v.fx<a.fx?h(b,v):c(b)):b=h(b,a)}return b[0]},processVennData:function(a,b){a=u(a)?a:[];const e=a.reduce(function(a,b){var d;if(d=b.sets)d=z(b)&&r(b)&&0<b.value;d&&-1===a.indexOf(b.sets[0])&&a.push(b.sets[0]);return a},[]).sort(),d=a.reduce(function(a,d){d.sets&&z(d)&&!d.sets.some(function(a){return-1===e.indexOf(a)})&&
(a[d.sets.sort().join(b)]={sets:d.sets,value:d.value||0});return a},{});e.reduce(function(a,d,e,c){c.slice(e+1).forEach(function(e){a.push(d+b+e)});return a},[]).forEach(function(a){if(!d[a]){const e={sets:a.split(b),value:0};d[a]=e}});return Object.keys(d).map(function(a){return d[a]})},sortByTotalOverlap:I}});l(a,"Series/Venn/VennSeries.js",[a["Core/Animation/AnimationUtilities.js"],a["Core/Color/Color.js"],a["Core/Geometry/CircleUtilities.js"],a["Series/DrawPointUtilities.js"],a["Core/Geometry/GeometryUtilities.js"],
a["Core/Series/SeriesRegistry.js"],a["Series/Venn/VennPoint.js"],a["Series/Venn/VennUtils.js"],a["Core/Utilities.js"]],function(a,c,l,q,x,w,t,g,C){const {animObject:r}=a,{parse:z}=c,{getAreaOfIntersectionBetweenCircles:I,getCirclesIntersectionPolygon:K,isCircle1CompletelyOverlappingCircle2:B,isPointInsideAllCircles:m,isPointOutsideAllCircles:f}=l,{getCenterOfPoints:J}=x,{seriesTypes:{scatter:k}}=w,{addEvent:D,extend:G,isArray:u,isNumber:A,isObject:H,merge:E}=C;class n extends k{constructor(){super(...arguments);
this.points=this.options=this.mapOfIdToRelation=this.data=void 0}static getLabelPosition(a,e){var b=a.reduce((b,d)=>{const c=d.r/2;return[{x:d.x,y:d.y},{x:d.x+c,y:d.y},{x:d.x-c,y:d.y},{x:d.x,y:d.y+c},{x:d.x,y:d.y-c}].reduce((b,d)=>{const c=g.getMarginFromCircles(d,a,e);b.margin<c&&(b.point=d,b.margin=c);return b},b)},{point:void 0,margin:-Number.MAX_VALUE}).point;b=g.nelderMead(function(b){return-g.getMarginFromCircles({x:b[0],y:b[1]},a,e)},[b.x,b.y]);b={x:b[0],y:b[1]};m(b,a)&&f(b,e)||(b=1<a.length?
J(K(a)):{x:a[0].x,y:a[0].y});return b}static getLabelValues(a,e){const b=a.sets,c=e.reduce((a,d)=>{const c=-1<b.indexOf(d.sets[0]);d.circle&&a[c?"internal":"external"].push(d.circle);return a},{internal:[],external:[]});c.external=c.external.filter(a=>c.internal.some(b=>!B(a,b)));a=n.getLabelPosition(c.internal,c.external);e=g.getLabelWidth(a,c.internal,c.external);return{position:a,width:e}}static layout(a){const b={},d={};if(0<a.length){const c=g.layoutGreedyVenn(a),e=a.filter(g.isSet);a.forEach(function(a){var h=
a.sets;const f=h.join();if(h=g.isSet(a)?c[f]:I(h.map(a=>c[a])))b[f]=h,d[f]=n.getLabelValues(a,e)})}return{mapOfIdToShape:b,mapOfIdToLabelValues:d}}static getScale(a,c,d){var b=d.bottom-d.top;const e=d.right-d.left;b=Math.min(0<e?1/e*a:1,0<b?1/b*c:1);return{scale:b,centerX:a/2-(d.right+d.left)/2*b,centerY:c/2-(d.top+d.bottom)/2*b}}static updateFieldBoundaries(a,c){const b=c.x-c.r,e=c.x+c.r,f=c.y+c.r;c=c.y-c.r;if(!A(a.left)||a.left>b)a.left=b;if(!A(a.right)||a.right<e)a.right=e;if(!A(a.top)||a.top>
c)a.top=c;if(!A(a.bottom)||a.bottom<f)a.bottom=f;return a}animate(a){if(!a){const a=r(this.options.animation);this.points.forEach(function(b){const d=b.shapeArgs;if(b.graphic&&d){const c={},e={};d.d?c.opacity=.001:(c.r=0,e.r=d.r);b.graphic.attr(c).animate(e,a);d.d&&setTimeout(function(){b&&b.graphic&&b.graphic.animate({opacity:1})},a.duration)}},this)}}drawPoints(){const a=this,c=a.chart,d=a.group,f=c.renderer;(a.points||[]).forEach(function(b){const e={zIndex:u(b.sets)?b.sets.length:0},g=b.shapeArgs;
c.styledMode||G(e,a.pointAttribs(b,b.state));q.draw(b,{isNew:!b.graphic,animatableAttribs:g,attribs:e,group:d,renderer:f,shapeType:g&&g.d?"path":"circle"})})}init(){k.prototype.init.apply(this,arguments);delete this.opacity}pointAttribs(a,c){const b=this.options||{};a=E(b,{color:a&&a.color},a&&a.options||{},c&&b.states[c]||{});return{fill:z(a.color).brighten(a.brightness).get(),opacity:a.opacity,stroke:a.borderColor,"stroke-width":a.borderWidth,dashstyle:a.borderDashStyle}}translate(){var a=this.chart;
this.processedXData=this.xData;this.generatePoints();var c=g.processVennData(this.options.data,n.splitter);const {mapOfIdToShape:d,mapOfIdToLabelValues:f}=n.layout(c);c=Object.keys(d).filter(function(a){return(a=d[a])&&A(a.r)}).reduce(function(a,b){return n.updateFieldBoundaries(a,d[b])},{top:0,bottom:0,left:0,right:0});a=n.getScale(a.plotWidth,a.plotHeight,c);const k=a.scale,l=a.centerX,m=a.centerY;this.points.forEach(function(a){let b=u(a.sets)?a.sets:[];var c=b.join(),e=d[c];let g;var h=f[c]||
{};c=h.width;h=h.position;let n=a.options&&a.options.dataLabels;e&&(e.r?g={x:l+e.x*k,y:m+e.y*k,r:e.r*k}:e.d&&(e=e.d,e.forEach(a=>{"M"===a[0]?(a[1]=l+a[1]*k,a[2]=m+a[2]*k):"A"===a[0]&&(a[1]*=k,a[2]*=k,a[6]=l+a[6]*k,a[7]=m+a[7]*k)}),g={d:e}),h?(h.x=l+h.x*k,h.y=m+h.y*k):h={},A(c)&&(c=Math.round(c*k)));a.shapeArgs=g;h&&g&&(a.plotX=h.x,a.plotY=h.y);c&&g&&(a.dlOptions=E(!0,{style:{width:c}},H(n,!0)?n:void 0));a.name=a.options.name||b.join("\u2229")})}}n.splitter="highcharts-split";n.defaultOptions=E(k.defaultOptions,
{borderColor:"#cccccc",borderDashStyle:"solid",borderWidth:1,brighten:0,clip:!1,colorByPoint:!0,dataLabels:{enabled:!0,verticalAlign:"middle",formatter:function(){return this.point.name}},inactiveOtherPoints:!0,marker:!1,opacity:.75,showInLegend:!1,legendType:"point",states:{hover:{opacity:1,borderColor:"#333333"},select:{color:"#cccccc",borderColor:"#000000",animation:!1},inactive:{opacity:.075}},tooltip:{pointFormat:"{point.name}: {point.value}"},legendSymbol:"rectangle"});G(n.prototype,{axisTypes:[],
directTouch:!0,isCartesian:!1,pointArrayMap:["value"],pointClass:t,utils:g});w.registerSeriesType("venn",n);"";D(n,"afterSetOptions",function(a){const b=a.options.states;this.is("venn")&&Object.keys(b).forEach(function(a){b[a].halo=!1})});return n});l(a,"masters/modules/venn.src.js",[],function(){})});//# sourceMappingURL=venn.js.map